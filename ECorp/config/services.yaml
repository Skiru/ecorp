parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    ECorp\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    ECorp\UI\Api\:
        resource: '../src/UI/Api'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    ECorp\Application\User\Command\UserRegisterCommandHandler:
        arguments: ['@ECorp\Infrastructure\Persistence\Repository\UserDbRepository', '@ECorp\Infrastructure\Persistence\Doctrine\Dbal\DbalUserQuery']

    ECorp\Infrastructure\CommandBus\CommandBus:
        calls:
            - [registerHandler, ['ECorp\Application\User\Command\UserRegisterCommand', '@ECorp\Application\User\Command\UserRegisterCommandHandler']]
